[core32]
platform                    = espressif32
platform_packages           = 
build_flags                 = -DAFE_ESP32
                              -DUSE_IPV6 ; comment to disable IPv6
                              -Wno-switch-unreachable
                              -Wno-stringop-overflow
                              -fno-exceptions
                              -flto=auto
                              ;-I$PROJECT_DIR/include
                              ;-include "sdkconfig.h"
                              ;-include "esp32x_fixes.h"
                              ; wrappers for the crash-recorder
                              -Wl,--wrap=panicHandler -Wl,--wrap=xt_unhandled_exception
build_unflags               = -Wswitch-unreachable
                              -Wstringop-overflow
                              -Wincompatible-pointer-types
                              -Wnonnull-compare
                              -fexceptions
                              -fno-lto
                              -Wpointer-arith
lib_deps                    = LittleFS_esp32 ;https://github.com/lorol/LITTLEFS.git
                              https://github.com/marian-craciunescu/ESP32Ping.git ; @TODO make it from my rep                             
lib_ignore                  =
                              HTTPUpdateServer
                              USB
                              esp-nimble-cpp
                              NetBIOS
                              Preferences
                              BluetoothSerial
                              ArduinoOTA
                              ESP32-HomeKit
extra_scripts               = ${common.extra_scripts}
monitor_filters             = esp32_exception_decoder

[ESP32_base]
framework               = ${common.framework}
platform                = ${core32.platform}
platform_packages       = ${core32.platform_packages}
monitor_speed           = ${common.monitor_speed}
monitor_echo            = ${common.monitor_echo}
monitor_filters         = ${core32.monitor_filters}
upload_resetmethod      = ${common.upload_resetmethod}
build_flags             = ${core32.build_flags}
build_unflags           = ${core32.build_unflags}
lib_archive             = ${common.lib_archive}
lib_ldf_mode            = ${common.lib_ldf_mode}
lib_compat_mode         = ${common.lib_compat_mode}
lib_deps                = ${core32.lib_deps}
lib_ignore              = ${core32.lib_ignore}
lib_extra_dirs          = ${common.lib_extra_dirs}
extra_scripts           = ${core32.extra_scripts}

;board_build.filesystem  = ${common.board_build.filesystem}
;custom_unpack_dir       = ${common.custom_unpack_dir}
;board_build.variants_dir = ${common.board_build.variants_dir}

[esp32_4M]
extends                 = ESP32_base
board                   = ESP32
